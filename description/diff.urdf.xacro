<?xml version="1.0"?>
<robot name="differential_drive_car" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="chassis_length" value="1.0"/>
    <xacro:property name="chassis_width" value="0.6"/>
    <xacro:property name="chassis_height" value="0.2"/>
    <xacro:property name="wheel_radius" value="0.15"/>
    <xacro:property name="wheel_width" value="0.05"/>
    <xacro:property name="wheelbase" value="0.8"/>
    <xacro:property name="track_width" value="0.6"/>

    <material name="orange">
        <color rgba="1.0 0.5 0.0 1.0"/>
    </material>

    <material name="gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
    </material>


    <!-- Dummy Base Link -->
    <link name="base_link">
    </link>

    <joint name="base_to_chassis" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!-- Chassis -->
    <link name="chassis">
        <visual>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="10.0"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1.0" iyy="1.0" izz="1.0" ixy="0.0" ixz="0.0" iyz="0.0"/>
        </inertial>
    </link>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="name x y z reflect type">
        <link name="${name}">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="gray"/>
            </visual>

            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="1.0"/>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="0.01" iyy="0.01" izz="0.01" ixy="0.0" ixz="0.0" iyz="0.0"/>
            </inertial>
        </link>
        <joint name="${name}_joint" type="continuous">
            <parent link="chassis"/>
            <child link="${name}"/>
            <origin xyz="${x} ${y} ${z}" rpy="${(pi/2)*reflect} 0 0"/>
            <axis xyz="0 0 1"/>
            <dynamics damping="0.1" friction="0.1"/>
            <limit lower="0" upper="0" effort="10" velocity="10"/>
        </joint>
    </xacro:macro>

    <!-- Front Left Wheel -->
    <xacro:wheel name="front_left_wheel" type="continuous" x="${wheelbase / 2}" y="${track_width / 2}" z="0" reflect="-1.0"/>

    <!-- Front Right Wheel -->
    <xacro:wheel name="front_right_wheel" type="continuous" x="${wheelbase / 2}" y="-${track_width / 2}" z="0" reflect="-1.0"/>

    <!-- Rear Left Wheel -->
    <xacro:wheel name="rear_left_wheel" type="fixed" x="-${wheelbase / 2}" y="${track_width / 2}" z="0" reflect="-1.0"/>

    <!-- Rear Right Wheel -->
    <xacro:wheel name="rear_right_wheel" type="fixed" x="-${wheelbase / 2}" y="-${track_width / 2}" z="0" reflect="-1.0"/>

    <!-- Gazebo Plugins -->
    <gazebo>
        <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/differential_drive_car</namespace>
                <remapping>cmd_vel:=/cmd_vel</remapping>
            </ros>
            <left_joint>front_left_wheel_joint</left_joint>
            <right_joint>front_right_wheel_joint</right_joint>
            <wheel_separation>${track_width}</wheel_separation>
            <wheel_diameter>${wheel_radius*2}</wheel_diameter>
            <publish_wheel_tf>true</publish_wheel_tf>
            <publish_wheel_joint_state>true</publish_wheel_joint_state>
            <odom_topic>/odom</odom_topic>
            <odometry_frame>odom</odometry_frame>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <robot_base_frame>chassis</robot_base_frame>
        </plugin>

        <!-- IMU Sensor -->
        <plugin name="imu_sensor" filename="libgazebo_ros_imu.so">
            <ros>
                <namespace>/differential_drive_car</namespace>
                <remapping>imu:=/imu_data</remapping>
            </ros>
            <link_name>chassis</link_name>
            <update_rate>50</update_rate>
        </plugin>
    </gazebo>

</robot>
